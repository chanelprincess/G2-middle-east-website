# Nginx/OpenResty Configuration for g2middleeast.com
# Cloudflare-optimized setup with Full (Strict) SSL/TLS
# 
# IMPORTANT: Since Cloudflare proxies all traffic (orange cloud), 
# this server receives connections from Cloudflare IPs only.
# The actual SSL/TLS termination happens at Cloudflare's edge.

# HTTP Server Block - Port 80
# Redirects all HTTP traffic to HTTPS
server {
    listen 80;
    listen [::]:80;
    
    server_name g2middleeast.com www.g2middleeast.com;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Redirect all HTTP requests to HTTPS
    return 301 https://$server_name$request_uri;
}

# HTTPS Server Block - Port 443
# Main server configuration for g2middleeast.com and www.g2middleeast.com
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    
    server_name g2middleeast.com www.g2middleeast.com;
    
    # Root directory and index files
    root /var/www/g2middleeast.com/public_html;
    index index.html index.htm index.php;
    
    # Character encoding
    charset utf-8;
    
    # ================================
    # SSL/TLS Configuration
    # ================================
    
    # SSL Certificate paths (Let's Encrypt or commercial certificate)
    ssl_certificate /etc/ssl/certs/g2middleeast.com.crt;
    ssl_certificate_key /etc/ssl/private/g2middleeast.com.key;
    
    # SSL protocols (TLS 1.2 and 1.3 only for security)
    ssl_protocols TLSv1.2 TLSv1.3;
    
    # SSL ciphers (modern, secure cipher suite)
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;
    
    # SSL session cache
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # SSL session tickets
    ssl_session_tickets off;
    
    # OCSP stapling (requires valid certificate)
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/ssl/certs/g2middleeast.com.chain.crt;
    resolver 1.1.1.1 1.0.0.1 valid=300s;
    resolver_timeout 5s;
    
    # ================================
    # Security Headers
    # ================================
    
    # HSTS (HTTP Strict Transport Security)
    # Tell browsers to always use HTTPS for 1 year
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Content Security Policy (adjust based on your needs)
    add_header Content-Security-Policy "default-src 'self' https:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.tailwindcss.com https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net; img-src 'self' data: https:; font-src 'self' data: https://cdn.jsdelivr.net; connect-src 'self' https://api.cloudflare.com; frame-ancestors 'self';" always;
    
    # X-Frame-Options (prevent clickjacking)
    add_header X-Frame-Options "SAMEORIGIN" always;
    
    # X-Content-Type-Options (prevent MIME sniffing)
    add_header X-Content-Type-Options "nosniff" always;
    
    # X-XSS-Protection (XSS filter)
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Referrer Policy
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Permissions Policy (formerly Feature-Policy)
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # ================================
    # Cloudflare Real IP Configuration
    # ================================
    
    # Restore real visitor IP from Cloudflare headers
    set_real_ip_from 173.245.48.0/20;
    set_real_ip_from 103.21.244.0/22;
    set_real_ip_from 103.22.200.0/22;
    set_real_ip_from 103.31.4.0/22;
    set_real_ip_from 141.101.64.0/18;
    set_real_ip_from 108.162.192.0/18;
    set_real_ip_from 190.93.240.0/20;
    set_real_ip_from 188.114.96.0/20;
    set_real_ip_from 197.234.240.0/22;
    set_real_ip_from 198.41.128.0/17;
    set_real_ip_from 162.158.0.0/15;
    set_real_ip_from 104.16.0.0/13;
    set_real_ip_from 104.24.0.0/14;
    set_real_ip_from 172.64.0.0/13;
    set_real_ip_from 131.0.72.0/22;
    set_real_ip_from 2400:cb00::/32;
    set_real_ip_from 2606:4700::/32;
    set_real_ip_from 2803:f800::/32;
    set_real_ip_from 2405:b500::/32;
    set_real_ip_from 2405:8100::/32;
    set_real_ip_from 2a06:98c0::/29;
    set_real_ip_from 2c0f:f248::/32;
    
    real_ip_header CF-Connecting-IP;
    real_ip_recursive on;
    
    # ================================
    # Logging
    # ================================
    
    access_log /var/log/nginx/g2middleeast.com.access.log;
    error_log /var/log/nginx/g2middleeast.com.error.log;
    
    # ================================
    # Performance Optimization
    # ================================
    
    # Gzip compression (Cloudflare also compresses, but this helps for direct access)
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml font/truetype font/opentype application/vnd.ms-fontobject image/svg+xml;
    gzip_disable "msie6";
    
    # Browser caching for static assets
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    
    # ================================
    # Application Routes
    # ================================
    
    # Root location
    location / {
        try_files $uri $uri/ /index.html =404;
    }
    
    # API proxy (if you have a backend API server)
    # Uncomment and adjust if needed
    # location /api/ {
    #     proxy_pass http://127.0.0.1:8080;
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection 'upgrade';
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     proxy_cache_bypass $http_upgrade;
    # }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Deny access to hidden files (starting with a dot)
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Deny access to sensitive files
    location ~ /(?:\.git|\.gitignore|\.env|composer\.json|composer\.lock|package\.json|package-lock\.json|yarn\.lock) {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Custom error pages (create these files in your document root)
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}

# ================================
# WWW to Non-WWW Redirect (Optional)
# ================================
# Uncomment this block if you want to redirect www to non-www
# Comment out the www.g2middleeast.com in the main server block above

# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     
#     server_name www.g2middleeast.com;
#     
#     # SSL certificates (same as main domain)
#     ssl_certificate /etc/ssl/certs/g2middleeast.com.crt;
#     ssl_certificate_key /etc/ssl/private/g2middleeast.com.key;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     
#     # Redirect to non-www
#     return 301 https://g2middleeast.com$request_uri;
# }
